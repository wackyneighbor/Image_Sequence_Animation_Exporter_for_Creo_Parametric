: Image Sequence Animation Mapkey Generator for Creo Parametric
: by Darren Cokin  v1.0 November 2018   General Public License
:
: Note that ":" is the comment prefix for *.bat files, "/*" is the comment
: prefix for relations, and "!" is the comment prefix for *.pro files used to
: define mapkeys. (do not include comment lines within a mapkey.)
:
: TROUBLESHOOTING BROKEN MAPKEYS FOR NEW VERSIONS OF CREO PARAMETRIC
: Since mapkeys rely on the user interface, they are prone to breaking
: when the user interface changes.  Certain subroutines below are more likely
: to break than others, they are identified in comments.  Once a broken
: subroutine is identified, record a new mapkey with latest version of Creo
: Parametric that performs the same function, and paste the code into this
: file, with some particular changes.  In image saving mapkey for instance,
: the specified filename, height & width should be replaced with a variables.
:
: Note that within a mapkey, every line after the first one starts with a
: "mapkey(continued) " statement and every line except for the last one ends
: with a "\" continuation character.
:
: There is an 80 character length limit for lines in a mapkey, which means
: 61 characters maximum between "mapkey(continued)" and "\".
:
: When putting mapkey code in this file, preceed every line with "echo ", and
: end every line with ">>animation_sequence_mapkey.pro".  Note that these do
: not contribute to the 80 character limit.
:
: Various characters in the mapkey code and comments must be "escaped" when
: written in a *.bat file such as this.
:      replace < with ^<
:      replace > with ^>
:      replace & with ^&
:      replace % with %%
:
: additional escape characters are needed inside FOR loops & IF statements
:      replace ( with ^(
:      replace ) with ^)
:      replace ; with ^;
:
:   Thus, for a mapkey that is repeated in a loop, like the last one in
:   this file, each line should start with:
:      "mapkey^(continued^) "
:
: Note that escape characters do not contribute to the 80 character limit.

@echo off
Title Image Sequence Animation Mapkey Generator for Creo Parametric
Mode Con Cols=80 lines=20 & color 81

echo Welcome to the Image Sequence Animation Mapkey Generator for Creo Parametric
echo by Darren Cokin  v1.0

echo.
echo.
echo Tested ^& working with Creo Parametric 2.0 ^& 4.0.  Note that mapkey code
echo such as generated by this utility is very likely to stop working with future
echo versions of Creo, as the GUI features they are attempting to control may have
echo changed.  Troubleshooting and fixing should be relatively easy, as the mapkeys
echo are broken up into subroutines that perform one action each.  Once the problem
echo is identified, a mapkey that performs the same function in the new version of
echo Creo Parametric could be recorded, and the code pasted in place.  (With escape
echo characters and variables added as needed, see comments in source code of this
echo utility for advice.)
echo.
echo    This utility should have been distributed with a text file called
echo    "animation_relations_sample.txt" which provides code that can be
echo    pasted into a 3D model for easy compatibility with this utility.
echo.
echo.
pause
cls

echo Welcome to the Image Sequence Animation Mapkey Generator for Creo Parametric
echo by Darren Cokin
echo.
echo.
echo How many times would you like to regenerate the model between frame captures?
echo Enter a number between 1 - 9 (or leave blank to accept default value of 1)
set /p RegenRepeats="> "

: if user did not enter a value, set to default value of 1
if "%RegenRepeats%"=="" (
    set /a RegenRepeats = 1
)

echo.
echo Reset a view (camera orientation) between frames?
echo Note that regeneration will disrupt display of perspective views.  If you
echo would like to restore a saved view orienation before saving each frame,
echo enter its name here, otherwise hit enter to continue.
echo    Note that spaces are allowed in view names.  You must enter view name
echo    in ALL CAPS here.  (Even though it is displayed in Title Case within
echo    Creo Parametric.)
set /p ViewToRestore="VIEW NAME (ALL CAPS) > "

echo.
echo How many frames would you like to capture for the entire animation?
echo Enter a number between 1 - 9999 (or leave blank to accept default value of 24)
set /p NumberOfFrames="> "
: if user did not enter a value, set to default value of 24
if "%NumberOfFrames%"=="" (
    set /a NumberOfFrames = 24
)

cls
echo Welcome to the Image Sequence Animation Mapkey Generator for Creo Parametric
echo by Darren Cokin
echo.
echo.
echo What is the height in pixels of the images you would like created?
echo Enter a number (or leave blank to accept default value of 720 pixels)
set /p Height="> "
: if user did not enter a value, set to default value of 720
if "%Height%"=="" (
    set /a Height = 720
)
: convert Height from pixels to inches (at 100 pixels per inch)
set /a HeightInInchesInteger=%Height:~0,-2%
set /a HeightInInchesFractional=%Height:~-2%
set HeightInInches=%HeightInInchesInteger%.%HeightInInchesFractional%

echo.
echo What is the width in pixels of the images you would like created?
echo Enter a number (or leave blank to accept default value of 1280 pixels)
set /p Width="> "
: if user did not enter a value, set to default value of 1280
if "%Width%"=="" (
    set /a Width = 1280
)
: convert Height from pixels to inches (at 100 pixels per inch)
set /a WidthInInchesInteger=%Width:~0,-2%
set /a WidthInInchesFractional=%Width:~-2%
set WidthInInches=%WidthInInchesInteger%.%WidthInInchesFractional%

echo.
echo What prefix would you like to use for the image filenames?
echo Enter a text string (or leave blank to accept default value of "CreoAnim_")
set /p FilenamePrefix="> "
: if user did not enter a value, set to default value of CreoAnim_
if "%FilenamePrefix%"=="" (
    set FilenamePrefix=CreoAnim_
)

echo.
echo Creo 2.0 is not able to save *.png format image files.  Enter "tif" here
echo to save *.tif format image files instead, or leave blank for *.png.
set /p FilenameExtension="> "
: if user did not enter a value, set to default value of png
if "%FilenameExtension%"=="" (
    set FilenameExtension=png
)

: set variable for type_option to be used in image saving mapkey.
:  should be "db_563" for *.tif, or "db_564" for *.png
if "%FilenameExtension%"=="tif" (
    set Filetype=db_563
) else (
    set Filetype=db_564
)

cls
echo Welcome to the Image Sequence Animation Mapkey Generator for Creo Parametric
echo by Darren Cokin
echo.
echo.
echo.
echo.
echo.
echo.
echo.
echo.
echo Generating code.
echo Mapkey that triggered this batch script will continue upon completion.

: Create variable with regeneration mapkey to use first
set /a RegenRepeatsMinusOne=%RegenRepeats%-1
set RegenMapkeyToUseFirst=%%g%RegenRepeatsMinusOne%

: Create variable with regeneration mapkey to use every time after first
set RegenMapkeyToUse=%%g%RegenRepeats%

: Create variable that is either blank or has the "%restoreview;" mapkey, depending on if
: user specified a view to restore
if "%ViewToRestore%"=="" (
    set ViewRestoreOption=
) else (
    set ViewRestoreOption=%%restoreview;
)

: Begin writing *.pro file, filling in standardized mapkeys that do not need to be customized
echo ! This file was autocoded by "animation_sequence_mapkey_generator.bat", a>animation_sequence_mapkey.pro
echo ! utility developed by Darren Cokin.  It includes a number of subroutines>>animation_sequence_mapkey.pro
echo ! for saving an animated image squence from Creo Parametric, customized>>animation_sequence_mapkey.pro
echo ! for a given number of image frames, the resolution of those images,>>animation_sequence_mapkey.pro
echo ! filename prefix for those images, and whether or not to refresh a saved>>animation_sequence_mapkey.pro
echo ! view (camera orientation) in between saving the images (needed for>>animation_sequence_mapkey.pro
echo ! perspective views only).>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro
echo ! These subroutines regenerate the model a given number of times, and>>animation_sequence_mapkey.pro
echo ! then activates Temporarily Shade.  This will remove the text overlaid on>>animation_sequence_mapkey.pro
echo ! lower left of the screen indicating simp rep and xsec status, and on the>>animation_sequence_mapkey.pro
echo ! lower right with tolerance settings (if tol_display config setting is on).>>animation_sequence_mapkey.pro
echo ! If you are trying to make a wireframe mode animation, these shade commands>>animation_sequence_mapkey.pro
echo ! will interfere.>>animation_sequence_mapkey.pro
echo mapkey g0 @MAPKEY_LABELshade;~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g1 @MAPKEY_LABELregenerate and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g2 @MAPKEY_LABELregenerate twice and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto`;\~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g3 @MAPKEY_LABELregenerate 3 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g4 @MAPKEY_LABELregenerate 4 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto`;~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g5 @MAPKEY_LABELregenerate 5 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g6 @MAPKEY_LABELregenerate 6 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto`;~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g7 @MAPKEY_LABELregenerate 7 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g8 @MAPKEY_LABELregenerate 8 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto`;~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo mapkey g9 @MAPKEY_LABELregenerate 9 times and shade;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdRegenAuto` ;~ Command `ProCmdRegenAuto` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdViewShade`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro


echo ! This subroute flips the values of ANIMATE_WITH_EVERY_REGEN to YES.>>animation_sequence_mapkey.pro
echo ! Model should include a relation that increments some value if this is>>animation_sequence_mapkey.pro
echo ! equal to yes.  Example:>>animation_sequence_mapkey.pro
echo !    if ANIMATE_WITH_EVERY_REGEN == yes>>animation_sequence_mapkey.pro
echo !        value = value + ^1>>animation_sequence_mapkey.pro
echo !    endif>>animation_sequence_mapkey.pro
echo mapkey activateregenmode @MAPKEY_LABELflips parameter to YES;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdMmParams` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Arm `relation_dlg` `ParamsPHLay.ParTable` 2 `rowANIMATE_WITH_EVERY_REGEN` \>>animation_sequence_mapkey.pro
echo mapkey(continued) `value`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Disarm `relation_dlg` `ParamsPHLay.ParTable` 2 \>>animation_sequence_mapkey.pro
echo mapkey(continued) `rowANIMATE_WITH_EVERY_REGEN` `value`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Select `relation_dlg` `ParamsPHLay.ParTable` 2 \>>animation_sequence_mapkey.pro
echo mapkey(continued) `rowANIMATE_WITH_EVERY_REGEN` `value`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Open `relation_dlg` `ParamsPHLay.ParTable_INPUT`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Close `relation_dlg` `ParamsPHLay.ParTable_INPUT`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Select `relation_dlg` `ParamsPHLay.ParTable_INPUT` 1 `YES`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Activate `relation_dlg` `PB_OK`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo ! This subroute flips the values of ANIMATE_WITH_EVERY_REGEN to NO.>>animation_sequence_mapkey.pro
echo mapkey deactivateregenmode @MAPKEY_LABELflips parameter to NO;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProCmdMmParams` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Arm `relation_dlg` `ParamsPHLay.ParTable` 2 `rowANIMATE_WITH_EVERY_REGEN` \>>animation_sequence_mapkey.pro
echo mapkey(continued) `value`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Disarm `relation_dlg` `ParamsPHLay.ParTable` 2 \>>animation_sequence_mapkey.pro
echo mapkey(continued) `rowANIMATE_WITH_EVERY_REGEN` `value`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Select `relation_dlg` `ParamsPHLay.ParTable` 2 \>>animation_sequence_mapkey.pro
echo mapkey(continued) `rowANIMATE_WITH_EVERY_REGEN` `value`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Open `relation_dlg` `ParamsPHLay.ParTable_INPUT`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Close `relation_dlg` `ParamsPHLay.ParTable_INPUT`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Select `relation_dlg` `ParamsPHLay.ParTable_INPUT` 1 `NO`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Activate `relation_dlg` `PB_OK`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

echo ! This subroutine imports the newly created animation_sequence_mapkey.pro file>>animation_sequence_mapkey.pro
echo ! into the current Creo Parmametric session.>>animation_sequence_mapkey.pro
echo mapkey importmapkey @MAPKEY_LABELimports *.pro file with mapkey to save entire animation;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Close `main_dlg_cur` `appl_casc`;~ Command `ProCmdRibbonOptionsDlg` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER` \>>animation_sequence_mapkey.pro
echo mapkey(continued) `main_dlg_w1:PHTLeft.AssyTree:^<NULL^>`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Activate `ribbon_options_dialog` `ConfigLayout.Open`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Trail `UI Desktop` `UI Desktop` `DLG_PREVIEW_POST` `file_open`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Activate `file_open` `Current Dir`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Select `file_open` `Ph_list.Filelist` 1 \>>animation_sequence_mapkey.pro
echo mapkey(continued) `animation_sequence_mapkey.pro`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Trail `UI Desktop` `UI Desktop` `PREVIEW_POPUP_TIMER` \>>animation_sequence_mapkey.pro
echo mapkey(continued) `file_open:Ph_list.Filelist:^<NULL^>`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Command `ProFileSelPushOpen_Standard@context_dlg_open_cmd` ;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Activate `ribbon_options_dialog` `OkPshBtn`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ FocusIn `UITools Msg Dialog Future` `no`;\>>animation_sequence_mapkey.pro
echo mapkey(continued) ~ Activate `UITools Msg Dialog Future` `no`;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro

: Continue writing *.pro file with customized mapkeys.
:
: only create the view restore mapkey if the user specified a view to restore
if not "%ViewToRestore%"=="" (
echo ! This subroutine restores the state of a particular view ^(camera orientation^)>>animation_sequence_mapkey.pro
echo ! It is needed because the display of perspective views is disrupted by>>animation_sequence_mapkey.pro
echo ! regeneration.  This mapkey was generated automatically by>>animation_sequence_mapkey.pro
echo ! animation_sequence_mapkey_generator.bat with a specified view name.>>animation_sequence_mapkey.pro
echo !   NOTE that spaces are allowed in view names.>>animation_sequence_mapkey.pro
echo !   NOTE that view names here must be entered ALL CAPS.>>animation_sequence_mapkey.pro
echo !        ^(even though they are displayed in Title Case within Creo Parametric^)>>animation_sequence_mapkey.pro
echo mapkey restoreview @MAPKEY_LABELRestores specified view^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Command `ProCmdNamedViewsGalSelect`  `%ViewToRestore%`^;>>animation_sequence_mapkey.pro
echo.>>animation_sequence_mapkey.pro
)

: Write the first part of the main animation sequence mapkey

echo ! This mapkey runs the animation.  It regenerates the model a particular>>animation_sequence_mapkey.pro
echo ! number of times, saves an image file with a particular name, and then repeats>>animation_sequence_mapkey.pro
echo ! the process.  It was generated automatically by>>animation_sequence_mapkey.pro
echo ! animation_sequence_mapkey_generator.bat.>>animation_sequence_mapkey.pro
echo mapkey cycleanim @MAPKEY_LABELRegenates and saves images;\>>animation_sequence_mapkey.pro
echo mapkey(continued) %%activateregenmode;%RegenMapkeyToUseFirst%;%ViewRestoreOption%\>>animation_sequence_mapkey.pro

: The next section of the mapkey will be repeated for the desired number of frames, with a unique
: filename for the saved image each time.

: start the loop
Setlocal enabledelayedexpansion
for /l %%a in (1,1,%NumberOfFrames%) do (

: determine the next filename, including adding leading zeros to frame count
set counter=%%a
set counter=000!counter!
set counter=!counter:~-4!
set NextFilename=%FilenamePrefix%!counter!.%FilenameExtension%

: continue writing the mapkey
: this section saves an image with particular settings.  Edit the below to change image resolution, etc.
:   the type_option in the 3rd line can be db_563 for tif, or db_564 for png
echo mapkey^(continued^) ~ Command `ProCmdModelSaveAs`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Activate `file_saveas` `Current Dir`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Select `file_saveas` `type_option` 1 `%Filetype%`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Update `file_saveas` `Inputname` `!NextFilename!`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Activate `file_saveas` `OK`;~ Open `shd_img_param` `o_size`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Close `shd_img_param` `o_size`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Select `shd_img_param` `o_size` 1 `Variable`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Update `shd_img_param` `i_height` `%HeightInInches%`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Update `shd_img_param` `i_width` `%WidthInInches%`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Update `shd_img_param` `i_tmargin` `0`;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Update `shd_img_param` `i_lmargin` `0`; ~ Open `shd_img_param` `o_depth`;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Close `shd_img_param` `o_depth`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Select `shd_img_param` `o_depth` 1 `depth24`^;\>>animation_sequence_mapkey.pro
echo mapkey^(continued^) ~ Activate `shd_img_param` `OK`^;\>>animation_sequence_mapkey.pro

: This section prepares for the next frame, ending the loop.  Skip for last cycle, as no
: next frame to prepare for
if not %%a==%NumberOfFrames% (
echo mapkey^(continued^) !RegenMapkeyToUse!^;!ViewRestoreOption!\>>animation_sequence_mapkey.pro
)
)
EndLocal

: Write the end of the main animation sequence mapkey.
echo mapkey(continued) %%deactivateregenmode;%RegenMapkeyToUseFirst%;>>animation_sequence_mapkey.pro
